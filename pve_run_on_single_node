#!/usr/bin/env bash

export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
SCRIPT=$(basename "$0")
LOGDIR="/tmp"
LOGFILE="$LOGDIR/$SCRIPT.log"

COMMAND=$1
COMMAND_ALL=$*

COMMAND_BASE=$(awk '{print $1}' <<< "$COMMAND")
! command -v "${COMMAND_BASE}" &>/dev/null && echo "Cannot find executable ${COMMAND_BASE}. Exiting..." && exit 1

usage() {
	echo "$SCRIPT runs any command you specify only if the current machine is a PVE node, is in quorum, and has the lowest node ID"
       	echo "Usage:"
	echo "  $SCRIPT <command> <param 1> ... <param n>"
	exit 1
}

[ -n "$COMMAND" ] || usage


log() {
	local MSG="$(date): $HOSTNAME: $*"
	[ -z "$*" ] && MSG=""
	echo "$MSG" >> "$LOGFILE"
}

check_lock() {
	INSTANCES=$(ps aux | grep -Pv "grep|cron" | grep -P "$SCRIPT .*\/?${COMMAND_BASE} " -c)
	[ "$INSTANCES" -gt 4 ] && { log "Another instance of $COMMAND already running. Exiting."; exit 1; }
}

sleep_to_avoid_race_condition() {
	local SLEEP=$(pvecm nodes | awk '/(local)/{print $1}')
	SLEEP=${SLEEP:-$(( ( RANDOM % 10 ) + 10 ))}
	log "Sleeping for $SLEEP seconds"

}

check_quorum() {
	local QUORUM=$(pvecm status | grep -Pi 'Quorate:\s+Yes')
	[ "$QUORUM" ] || { log "Cluster not quorate. Exiting."; exit 1; }
}

check_active_node() {
	local ACTIVE_NODE=$(pvecm nodes | grep -P '^\s+\d+\s+[1-9]' | head -n 1 | grep -ia '(local)')
	[ "$ACTIVE_NODE" ] || { log "I am not the active node. Exiting."; exit 1; }
}


check_quorum
check_active_node
# Disabling locking. It does not work well and I'm not sure we should have this here.
#check_lock

$COMMAND_ALL

